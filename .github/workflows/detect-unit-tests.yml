name: Detect and Run Unit Tests with Coverage

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-spec-files:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout PR branch code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Detect .spec.js Files in PR
        id: detect_files
        run: |
          BASE="${{ github.event.pull_request.base.ref }}"
          git fetch origin "$BASE"
          FILES=$(git diff --name-only origin/"$BASE"...HEAD | grep '\.spec\.js$' || true)
          echo "found_files=$FILES" >> "$GITHUB_OUTPUT"

      - name: Run Jest with Coverage
        id: jest
        run: |
          echo "ðŸ§ª Running tests with coverage..."
          npm run coverage || true
          echo "jest_exit_code=$?" >> $GITHUB_ENV

      - name: Upload HTML Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: coverage/lcov-report
          retention-days: 7

      - name: Post Coverage to ServiceNow (Static JSON Shell Payload)
        run: |
          echo "ðŸ“¡ Sending hardcoded metrics to ServiceNow..."

          PR_NUMBER="${{ github.event.pull_request.number }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_LINK="${{ github.event.pull_request.html_url }}"
          BRANCH_NAME="${{ github.head_ref }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          MERGE_STATE="${{ github.event.pull_request.draft == 'true' && echo 'Draft' || echo 'Ready' }}"

          OWNER=$(echo "${{ github.repository }}" | cut -d'/' -f1)
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)

          RAW_BASE="https://raw.githubusercontent.com/$OWNER/$REPO_NAME/refs/heads/$BRANCH_NAME"
          JS_FILE="$RAW_BASE/src/mathUtil.js"
          SPEC_FILE="$RAW_BASE/__tests__/mathUtil.spec.js"

          # Create JSON payload with fixed coverage data
          read -r -d '' PAYLOAD <<EOF
{
  "jsfilePath": "$JS_FILE",
  "specJsfilePath": "$SPEC_FILE",
  "prNumber": "$PR_NUMBER",
  "prlink": "$PR_LINK",
  "Author": "$PR_AUTHOR",
  "MergeStatus": "$MERGE_STATE",
  "prName": "$PR_TITLE",
  "BranchName": "$BRANCH_NAME",
  "coverage": {
    "files": {
      "allfiles": {
        "lines": 72.72,
        "branch": 100
      },
      "mathUtil.js": {
        "lines": 100,
        "branch": 100,
        "functions": 100,
        "statements": 100,
        "uncovered_lines": []
      },
      "mathUtil1.js": {
        "lines": 50,
        "branch": 100,
        "functions": 33.33,
        "statements": 50,
        "uncovered_lines": [6, 7, 8, 9, 10]
      },
      "mathUtil2.js": {
        "lines": 75,
        "branch": 100,
        "functions": 66.66,
        "statements": 75,
        "uncovered_lines": [10]
      }
    }
  }
}
EOF

          echo "ðŸš€ Payload to be sent:"
          echo "$PAYLOAD"

          curl -X POST "https://hackai.service-now.com/api/snc/nowunitmetricsapi" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD"

      - name: Fail if Jest Tests Failed
        run: |
          echo "âœ… Workflow completed. Checking Jest result..."
          exit $jest_exit_code
