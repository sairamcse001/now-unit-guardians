name: Detect and Run Unit Tests with Coverage

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-spec-files:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    permissions:  # Needed to comment on PR and upload artifact
      pull-requests: write
      contents: read

    steps:
      - name: Checkout PR branch code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Detect and Print .spec.js Files as JSON
        run: |
          echo "üîç Checking for .spec.js files in PR..."

          BASE="${{ github.event.pull_request.base.ref }}"
          git fetch origin "$BASE"

          FILES=$(git diff --name-only origin/"$BASE"...HEAD | grep '\.spec\.js$' || true)

          if [ -z "$FILES" ]; then
            echo "‚ÑπÔ∏è No .spec.js files found in this PR."
            exit 0
          fi

          echo "‚úÖ Detected the following .spec.js files:"
          echo "$FILES"

          echo "üì¶ Printing file contents as JSON:"
          echo "{"
          FIRST=1
          for FILE in $FILES; do
            if [ -f "$FILE" ]; then
              CONTENT=$(jq -Rs . < "$FILE")
              if [ $FIRST -eq 1 ]; then
                FIRST=0
              else
                echo ","
              fi
              echo -n "  \"$FILE\": $CONTENT"
            fi
          done
          echo ""
          echo "}"

      - name: Run Jest with Coverage
        run: |
          echo "üß™ Running tests with coverage..."
          npm run coverage

      - name: Upload HTML Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: coverage/lcov-report
          retention-days: 7

      - name: Post Jest Coverage Summary as PR Comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'coverage/coverage-summary.json';
            if (!fs.existsSync(path)) {
              core.setFailed('‚ùå coverage-summary.json not found');
            } else {
              const summary = JSON.parse(fs.readFileSync(path, 'utf8')).total;
              const format = (obj) => `- üß™ **Statements**: ${obj.statements.pct}% | **Branches**: ${obj.branches.pct}% | **Functions**: ${obj.functions.pct}% | **Lines**: ${obj.lines.pct}%`;

              const body = `### ‚úÖ Jest Code Coverage Report\n${format(summary)}\n\nüìÅ [Download HTML Coverage Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) ‚Üí Artifacts section`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body
              });
            }
