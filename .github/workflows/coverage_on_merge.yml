name: Full Jest Coverage and Test Summary

on:
  push:
    branches:
      - main

jobs:
  coverage-report:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout main
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          echo "ðŸ“¦ Installing dependencies..."
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Run Jest and Save Output
        run: |
          echo "ðŸ§ª Running Jest with coverage..."
          mkdir -p temp
          npx jest --coverage --coverageReporters=text > temp/jest-output.txt
          cat temp/jest-output.txt

      - name: Extract Test Summary Info (Shell)
        run: |
          echo "ðŸ“¦ Extracting test summary..."
          OUTPUT=$(cat temp/jest-output.txt)
          TEST_SUITES=$(echo "$OUTPUT" | grep "^Test Suites:" | sed 's/^Test Suites:[[:space:]]*//')
          TESTS=$(echo "$OUTPUT" | grep "^Tests:" | sed 's/^Tests:[[:space:]]*//')
          SNAPSHOTS=$(echo "$OUTPUT" | grep "^Snapshots:" | sed 's/^Snapshots:[[:space:]]*//')
          TIME=$(echo "$OUTPUT" | grep "^Time:" | sed 's/^Time:[[:space:]]*//')
          jq -n \
            --arg test_suites "$TEST_SUITES" \
            --arg tests "$TESTS" \
            --arg snapshots "$SNAPSHOTS" \
            --arg time "$TIME" \
            '{
              test_suites: $test_suites,
              tests: $tests,
              snapshots: $snapshots,
              time: $time
            }' > jest-run-summary.json
          cat jest-run-summary.json

      - name: Parse Jest Coverage Table Summary to JSON (Node.js)
        run: |
          node <<'EOF'
          const fs = require('fs');
          const text = fs.readFileSync('./temp/jest-output.txt', 'utf-8');
          const lines = text.split('\n');

          const start = lines.findIndex(line => line.includes('File')) + 1;
          const end = lines.findIndex((line, i) => i > start && line.trim().startsWith('-------------'));

          const data = [];

          for (let i = start; i < end; i++) {
            const line = lines[i].trim();
            if (!line || line.startsWith('---')) continue;

            const parts = line.split('|').map(part => part.trim());
            if (parts.length < 6) continue;

            data.push({
              file: parts[0],
              statements: parts[1],
              branches: parts[2],
              functions: parts[3],
              lines: parts[4],
              uncovered_lines: parts[5] || ''
            });
          }

          fs.writeFileSync('coverage-table-summary.json', JSON.stringify(data, null, 2));
          EOF

      - name: Upload JSON Summary Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jest-summary-json
          path: |
            jest-run-summary.json
            coverage-table-summary.json
