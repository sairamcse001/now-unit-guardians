name: PR ServiceNow Notify

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  notify-servicenow:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Compose Dummy Payload for PR
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          PR_NUM: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
          PR_BRANCH: ${{ github.event.pull_request.base.ref }}
          PR_MERGE_STATE: ${{ github.event.pull_request.draft }}
        run: |
          echo "üßæ Building static payload for ServiceNow..."

          JS_FILE="https://raw.githubusercontent.com/sairamp076/Now-Unit-Guardians/refs/heads/main/src/mathUtil.js"
          SPEC_FILE="https://raw.githubusercontent.com/sairamp076/Now-Unit-Guardians/refs/heads/main/__tests__/mathUtil.spec.js"

          # Dummy coverage
          COVERAGE_JSON=$(jq -n '{
            files: {
              allfiles: {
                lines: 83.33,
                branch: 100
              },
              "mathUtil.js": {
                lines: 100,
                branch: 100,
                functions: 100,
                statements: 100,
                uncovered_lines: []
              }
            }
          }')

          FINAL_PAYLOAD=$(jq -n \
            --arg jsfilePath "$JS_FILE" \
            --arg specJsfilePath "$SPEC_FILE" \
            --arg prNumber "$PR_NUM" \
            --arg prlink "$PR_URL" \
            --arg Author "$PR_AUTHOR" \
            --arg prName "$PR_TITLE" \
            --arg BranchName "$PR_BRANCH" \
            --arg MergeStatus "$([ "$PR_MERGE_STATE" == "true" ] && echo "Draft" || echo "Ready")" \
            --argjson coverage "$COVERAGE_JSON" \
            '{
              jsfilePath: $jsfilePath,
              specJsfilePath: $specJsfilePath,
              prNumber: $prNumber,
              prlink: $prlink,
              Author: $Author,
              MergeStatus: $MergeStatus,
              prName: $prName,
              BranchName: $BranchName,
              coverage: $coverage
            }')

          mkdir -p ./temp
          echo "$FINAL_PAYLOAD" > ./temp/temp-pr-payload.json
          echo "PR_PREVIEW_LINK=https://preview--code-guardian-ai-vision-27.lovable.app/pr-ai-metrics/${PR_NUM}" >> $GITHUB_ENV

      - name: Send to ServiceNow
        run: |
          echo "üì° Sending PR data to ServiceNow..."

          RESPONSE=$(curl -s -w "\n%{http_code}" --location 'https://hackai.service-now.com/api/snc/nowunitmetricsapi' \
            --header 'Content-Type: application/json' \
            --data @./temp/temp-pr-payload.json)

          BODY=$(echo "$RESPONSE" | sed '$d')
          STATUS=$(echo "$RESPONSE" | tail -n1)

          echo "Status Code: $STATUS"
          echo "Response Body:"
          echo "$BODY"

          if [[ "$STATUS" -ne 200 && "$STATUS" -ne 201 ]]; then
            echo "‚ùå Failed to notify ServiceNow"
            exit 1
          fi

      - name: Send email to sairam.pasupuleti@servicenow.com
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Your PR Metrics Are Ready!"
          to: sairam.pasupuleti@servicenow.com
          from: GitHub Metrics Bot <${{ secrets.EMAIL_USERNAME }}>
          content_type: text/html
          body: |
            <p>Hi Sairam,</p>
            <p>Pull request metrics have been published successfully.</p>
            <p>
              <strong>Preview Link:</strong><br>
              <a href="${{ env.PR_PREVIEW_LINK }}">${{ env.PR_PREVIEW_LINK }}</a>
            </p>
            <p>Click the above link to see your metrics, coverage breakdown, and spec insights.</p>
            <br>
            <p>‚Äì Code Guardians Bot</p>
