name: Full Coverage and Error Report

on:
  push:
    branches:
      - main

jobs:
  generate-coverage-report:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout latest main branch
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies with error handling
        id: install
        run: |
          echo "ðŸ“¦ Installing dependencies..."
          if [ -f package-lock.json ]; then
            npm ci || echo '{ "error": "Dependency installation failed" }' && exit 1
          else
            npm install || echo '{ "error": "Dependency installation failed" }' && exit 1
          fi

      - name: Run Jest and extract coverage as JSON
        id: coverage
        run: |
          echo "ðŸ§ª Running Jest with coverage..."
          OUTPUT=$(npx jest --coverage 2>&1 | tee jest.log)

          # Check if any error occurred
          if grep -q "FAIL" jest.log; then
            echo '{ "error": "Test run failed" }'
            exit 1
          fi

          # Extract 'All files' line
          LINE=$(grep "^All files" jest.log)

          if [ -z "$LINE" ]; then
            echo '{ "error": "Coverage summary not found in output" }'
            exit 1
          fi

          # Remove | and % symbols, then split into fields
          CLEAN=$(echo "$LINE" | tr -d '|' | tr -d '%' | awk '{$1=$1; print}')

          # Split the line into values
          STATEMENTS=$(echo "$CLEAN" | awk '{print $2}')
          BRANCHES=$(echo "$CLEAN" | awk '{print $3}')
          FUNCTIONS=$(echo "$CLEAN" | awk '{print $4}')
          LINES=$(echo "$CLEAN" | awk '{print $5}')

          # Print as clean JSON
          jq -n \
            --arg stm "$STATEMENTS" \
            --arg br "$BRANCHES" \
            --arg fn "$FUNCTIONS" \
            --arg ln "$LINES" \
            '{
              statements: $stm,
              branches: $br,
              functions: $fn,
              lines: $ln
            }'

      - name: Upload HTML Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: html-coverage-report
          path: coverage/lcov-report
